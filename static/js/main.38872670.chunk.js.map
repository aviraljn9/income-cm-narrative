{"version":3,"sources":["logo.svg","components/Chart.js","components/Plot.js","components/BarChart.js","components/Controller.js","App.js","reportWebVitals.js","index.js"],"names":["Chart","props","svgRef","React","createRef","state","cm_plots","income_plots","setyear","bind","tick","setCurrentYear","handleSelect","y_domain","this","country","timerID","datafiltered","filter","x","year","sort","y","parseFloat","datafiltered2","scalex","d3","domain","range","scaley","scaley_2","d","val","html","div","append","attr","style","addpath","addtooltips","call","tickFormat","tickValues","data","strk","translate","datum","selectAll","enter","i","on","event","transition","duration","pageX","pageY","a","console","log","process","incomedata","cm_data","index","year_income","map","cm_country","find","undefined","isNaN","child_mortality","country_index","length","country_data","push","income","reducer","accumulator","currentValue","sum_cm","reduce","sum_income","updatechart","setInterval","clearInterval","setState","prevState","prevProps","target","value","all_options","Object","keys","all_countries","concat","for","type","min","max","step","id","onInput","name","onChange","onClick","width","height","ref","Component","Plot","radius","BarChart","num_countries","b","num_countries_per_group","Math","floor","groups","group_index","num_groups","cm_group_averages","curr_group","count_group","sum_cm_group","sum_income_group","Array","paddingInner","paddingOuter","cm_avg","bandwidth","income_avg","Controller","setscene","scene","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38872670.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class Chart extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800,\n            'country': 'average'\n        }\n\n        this.cm_plots = {}\n        this.income_plots = {}\n\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n        this.setCurrentYear =this.setCurrentYear.bind(this);\n        this.handleSelect =this.handleSelect.bind(this);\n    }    \n\n    updatechart()\n    {\n        let y_domain = 500;\n\n        let radius = 1.5;\n        // if (this.state.year == 2021 && this.timerID === null) {\n        //     y_domain = 150;\n        //     radius = 3;\n        // }\n        if (this.state.country != 'average' && this.timerID === null) {\n            y_domain = 1000;\n        }\n\n\n        var cm_country = this.cm_plots[this.state.country];\n        let datafiltered = cm_country.filter(\n            x => x.year <= this.state.year\n        ).sort((x, y) => parseFloat(x.year) - parseFloat(y.year))\n\n        var income_country = this.income_plots[this.state.country];\n        let datafiltered2 = income_country.filter(\n            x => x.year <= this.state.year\n        ).sort((x, y) => parseFloat(x.year) - parseFloat(y.year))\n\n        const scalex = d3.scaleLinear()\n        .domain([1800,2040])\n        .range([0,700])\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([300,0])\n\n        const scaley_2 = d3.scaleLog()\n        .domain([200,179000])\n        .range([300,0])\n\n        var valueline = d3.line()\n        .x(function(d) { return scalex(d.year); })\n        .y(function(d) { return scaley(d.val); });    \n\n        d3.select('#scatter').html(\"\");\n\n        d3.select('#ttip').html(\"\");\n\n        var div = d3.select('#ttip').append(\"div\")\t\n        .attr(\"class\", \"tooltip\")\t\t\t\t\n        .style(\"opacity\", 0);    \n        \n        this.addpath(datafiltered.filter(x => x.year <= 2021), 'steelblue', scalex, scaley, 'translate(50,50)')\n        this.addpath(datafiltered.filter(x => x.year >= 2021), 'red', scalex, scaley, 'translate(50,50)')\n\n        this.addtooltips(datafiltered, scalex, scaley, div, 'translate(50,50)')\n    \n        // g1.append(\"path\")\n        //     .attr(\"class\", \"line\")\n        //     .attr(\"d\", valueline(datafiltered));\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,350)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            // .tickFormat(d3.format(\"~s\"))\n        )\n\n        this.addpath(datafiltered2.filter(x => x.year <= 2021), 'steelblue', scalex, scaley_2, 'translate(50,450)')\n        this.addpath(datafiltered2.filter(x => x.year >= 2021), 'red', scalex, scaley_2, 'translate(50,450)')\n\n        this.addtooltips(datafiltered2, scalex, scaley_2, div, 'translate(50,450)')        \n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,450)')\n        .call(\n            d3.axisLeft(scaley_2)\n            .tickValues([300,1000,3000,10000,30000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            // .tickFormat(d3.format(\"~s\"))\n        )\n        \n\n    }\n\n    addpath(data, strk, scalex, scaley, translate)\n    {\n        d3.select('#scatter').append('g')\n        .attr('transform', translate)\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', strk)\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", d3.line()\n            .x(function(d) { return scalex(d.year); })\n            .y(function(d) { return scaley(d.val); })\n        )\n    }\n\n    addtooltips(data, scalex, scaley, div, translate)\n    {\n        d3.select('#scatter').append('g')\n        .attr('transform',translate)\n        .selectAll('rect')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('x',function(d,i) { return scalex(d.year); })\n        .attr('y',function(d,i) { return 0; })\n        .attr('width',function(d,i) { return 1; })\n        .attr('height', function(d,i) { return 300; })\n        .attr('fill', 'black')\n        .attr('opacity', 0)\n        .on(\"mouseover\", function(event, d) {\n            d3.select(this).attr(\"opacity\", 1)\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 1);\t\t\n            div.html(d.year + \"<br/>\" + d.val)\t\n                .style(\"left\", (event.pageX) + \"px\")\t\t\n                .style(\"top\", (event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(event, d) {\t\t\n            d3.select(this).attr(\"opacity\", 0)\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n            });\n    }\n\n    async componentDidMount()\n    {\n        console.log('chart mounted')\n        this.incomedata = await d3.csv(process.env.PUBLIC_URL + '/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv(process.env.PUBLIC_URL + '/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n\n        this.cm_plots = {}\n        this.cm_plots['average'] = []\n        \n        this.income_plots = {}\n        this.income_plots['average'] = []\n\n        for (let index = 1800; index < 2041; index++) {\n            let year_income = this.incomedata.map(\n                (x) => {                 \n                    let cm_country = this.cm_data.find(y => y.country === x.country);\n                    if (cm_country === undefined) {\n                        return null;\n                    }\n                    if (isNaN(x[index]) || isNaN(cm_country[index]))\n                    {\n                        return null;\n                    }\n                    return {'country': x.country, 'income': x[index], 'child_mortality': cm_country[[index]]} \n                }\n            ).filter(\n                x => {\n                    if (x.child_mortality > 0) return true;\n                    return false;\n                }\n            )\n\n            for (let country_index = 0; country_index < year_income.length; country_index++) {\n                const country_data = year_income[country_index];\n                if (!(country_data.country in this.cm_plots))\n                {\n                    this.cm_plots[country_data.country] = [];\n                    this.income_plots[country_data.country] = [];\n                }\n                this.cm_plots[country_data.country].push({'year': index, 'val': country_data.child_mortality});\n                this.income_plots[country_data.country].push({'year': index, 'val': country_data.income});\n            }\n\n            // console.log(year_income.length)\n            const reducer = (accumulator, currentValue) => accumulator + parseFloat(currentValue);\n            let sum_cm = year_income.map(\n                x => x.child_mortality\n            ).reduce(reducer, 0)\n            // console.log(sum_cm)\n\n            this.cm_plots['average'].push({'year': index, 'val': sum_cm / year_income.length})\n\n            let sum_income = year_income.map(\n                x => x.income\n            ).reduce(reducer, 0)\n            this.income_plots['average'].push({'year': index, 'val': sum_income / year_income.length})\n        }\n        // console.log(this.average_childmortality);\n        // console.log(this.average_income);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n        d3.select('#ttip').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            clearInterval(this.timerID);\n            this.timerID = null;\n            this.setState((prevState, prevProps) => {\n                return {\n                    'country': prevState.country,\n                    'year': 2040\n                };\n            }\n            )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'country': prevState.country,\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState(\n            {\n                'country': this.state.country,\n                'year': event.target.value\n            }\n        );\n\n    }\n\n    setCurrentYear()\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState(\n            {\n                'country': this.state.country,\n                'year': 2040\n            }\n        );\n    }\n\n    handleSelect(event)\n    {\n        this.setState(\n            {\n                'country': event.target.value,\n                'year': this.state.year\n            }\n        );\n    }\n\n    render() {\n        let all_options = Object.keys(this.cm_plots)\n        var all_countries = all_options.filter(x => x != \"average\").sort()\n        all_options = [\"average\"].concat(all_countries)\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                {\n                    this.timerID === null &&\n                    (\n                        <select value={this.state.country} onChange={this.handleSelect}>\n                            {\n\n                                all_options.map(\n                                    (x) => { return (<option value={x}>{x}</option>); }\n                                )\n                            }\n                        </select>\n                    )\n                }\n\n                <br></br>\n                <div>\n                    <button onClick = {this.setCurrentYear}>Display complete curve</button>\n                </div>\n\n                <div id='ttip'></div>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n\n            </div>\n        )\n    }\n}\n\nexport default Chart\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class Plot extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800\n        }\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n        this.setCurrentYear =this.setCurrentYear.bind(this);\n    }    \n\n    updatechart()\n    {\n        const year_income = this.incomedata.map(\n            (x) => {                 \n                let cm_country = this.cm_data.find(y => y.country === x.country);\n                if (cm_country === undefined) {\n                    return null;\n                }\n                if (isNaN(x[this.state.year]) || isNaN(cm_country[this.state.year]))\n                {\n                    return null;\n                }\n                return {'country': x.country, 'income': x[this.state.year], 'child_mortality': cm_country[[this.state.year]]} \n            }\n        ).filter(\n            x => {\n                if (x.child_mortality > 0) return true;\n                return false;\n            }\n        )\n        // console.log(year_income);\n\n        let y_domain = 1000;\n        let radius = 1.5;\n        if (this.timerID === null) {\n            if (this.state.year == 2021) {\n                y_domain = 150;\n            }\n            radius = 3;\n        }\n\n        const scalex = d3.scaleLog()\n        .domain([200,179000])\n        .range([0,700])\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([700,0])\n\n        d3.select('#scatter').html(\"\");\n        d3.select('#ttip').html(\"\");\n\n        var div = d3.select('#ttip').append(\"div\")\t\n        .attr(\"class\", \"tooltip\")\t\t\t\t\n        .style(\"opacity\", 0);    \n\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .selectAll('circle')\n        .data(year_income)\n        .enter()\n        .append('circle')\n        .attr('cx',function(d,i) { return scalex(d.income); })\n        .attr('cy',function(d,i) { return scaley(d.child_mortality); })\n        .attr('r',function(d,i) { return radius; })\n        .attr('fill', 'lightblue')\n        .on(\"mouseover\", function(event, d) {\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 1);\t\t\n            div.html(d.country + \"<br/>\" + d.income + \"<br/>\"  + d.child_mortality)\t\n                .style(\"left\", (event.pageX) + \"px\")\t\t\n                .style(\"top\", (event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n            });\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            .tickValues([300,1000,3000,10000, 30000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        \n    }\n\n    async componentDidMount()\n    {\n        // console.log('plot mounted')\n        console.log(process.env.PUBLIC_URL)\n        this.incomedata = await d3.csv(process.env.PUBLIC_URL + '/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv(process.env.PUBLIC_URL + '/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n        d3.select('#ttip').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            clearInterval(this.timerID);\n            this.timerID = null;\n            this.setState((prevState, prevProps) => {\n                return {\n                    'year': 2021\n                };\n            }\n            )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': event.target.value});\n\n    }\n\n    setCurrentYear()\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': 2021});\n\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                <br></br>\n                <div>\n                    <button onClick = {this.setCurrentYear}>Show 2021 data</button>\n                </div>\n\n                <div id='ttip'></div>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default Plot\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800\n        }\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n        this.setCurrentYear =this.setCurrentYear.bind(this);\n    }    \n\n    updatechart()\n    {\n        let y_domain = 500;\n        let radius = 1.5;\n        if (this.state.year == 2021 && this.timerID === null) {\n            y_domain = 70;\n            radius = 3;\n        }\n\n        const year_income = this.incomedata.map(\n            (x) => {                 \n                let cm_country = this.cm_data.find(y => y.country === x.country);\n                if (cm_country === undefined) {\n                    return null;\n                }\n                if (isNaN(x[this.state.year]) || isNaN(cm_country[this.state.year]))\n                {\n                    return null;\n                }\n                return {'country': x.country, 'income': x[this.state.year], 'child_mortality': cm_country[[this.state.year]]} \n            }\n        ).filter(\n            x => {\n                if (x.child_mortality > 0) return true;\n                return false;\n            }\n        )\n\n        const year_income_sorted = year_income.sort((a, b) => parseFloat(a.income) - parseFloat(b.income))\n        const num_countries = year_income_sorted.length\n        const num_groups = 10\n        const num_countries_per_group = Math.floor(num_countries / num_groups)\n\n        let groups = {}\n        for (let index = 0; index < num_groups; index++) {\n            groups[index] = []            \n        }\n\n        for (let index = 0; index < num_countries; index++) {\n            let group_index = Math.floor(index / num_countries_per_group)\n            group_index = Math.min(group_index, num_groups - 1)\n            groups[group_index].push(year_income[index])            \n        }\n\n        let cm_group_averages = []\n        const reducer = (accumulator, currentValue) => accumulator + parseFloat(currentValue);\n        for (let index = 0; index < num_groups; index++)\n        {\n            let curr_group = groups[index]\n            let count_group = curr_group.length\n            let sum_cm_group = curr_group.map(\n                (x) => x.child_mortality\n            ).reduce(reducer, 0)\n            let sum_income_group = curr_group.map(\n                (x) => x.income\n            ).reduce(reducer, 0)\n            cm_group_averages.push({'cm_avg': sum_cm_group / count_group, 'income_avg': sum_income_group / count_group})\n        }\n\n        const scalex = d3.scaleBand()\n        .domain([...Array(num_groups).keys()])\n        .range([0,700])\n        .paddingInner(0.2)\n        .paddingOuter(0.2);\n\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([700,0])\n      \n        const scaley_2 = d3.scaleLog()\n        .domain([200,179000])\n        .range([300,0])\n\n        d3.select('#scatter').html(\"\");\n\n        d3.select('#ttip').html(\"\");\n\n        var div = d3.select('#ttip').append(\"div\")\t\n        .attr(\"class\", \"tooltip\")\t\t\t\t\n        .style(\"opacity\", 0);    \n\n\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .selectAll('rect')\n        .data(cm_group_averages)\n        .enter()\n        .append('rect')\n        .attr('x',function(d,i) { return scalex(i); })\n        .attr('y',function(d,i) { return scaley(d.cm_avg); })\n        .attr('width',function(d,i) { return scalex.bandwidth(); })\n        .attr('height',function(d,i) { return (700 - scaley(d.cm_avg)); })\n        .attr('fill', function(d,i) {\n            if (d.year > 2021) {\n                return 'red';\n            }\n                return 'lightblue';\n            }\n        )\n        .on(\"mouseover\", function(event, d) {\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 1);\t\t\n            div.html(\"Average Income: \" + d.income_avg + \"<br/>\" + d.cm_avg)\t\n                .style(\"left\", (event.pageX) + \"px\")\t\t\n                .style(\"top\", (event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n            });\n\n            \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            // .tickFormat(d3.format(\"~s\"))\n        )        \n\n    }\n\n    async componentDidMount()\n    {\n        console.log('chart mounted')\n        this.incomedata = await d3.csv(process.env.PUBLIC_URL + '/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv(process.env.PUBLIC_URL + '/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n        d3.select('#ttip').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            clearInterval(this.timerID);\n            this.timerID = null;\n            this.setState((prevState, prevProps) => {\n                return {\n                    'year': 2021\n                };\n            }\n            )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': event.target.value});\n\n    }\n\n    setCurrentYear()\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': 2021});\n\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                <br></br>\n                <div>\n                    <button onClick = {this.setCurrentYear}>Show 2021 data</button>\n                </div>\n\n                <div id='ttip'></div>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default BarChart\n","import React, { Component } from 'react'\nimport Chart from './Chart.js';\nimport Plot from './Plot.js';\nimport BarChart from './BarChart.js';\n\nexport class Controller extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'scene': 0\n        }\n        this.setscene = this.setscene.bind(this);\n    }    \n\n    setscene()\n    {\n        // clearInterval(this.timerID);\n        // this.timerID = null;\n        this.setState({'scene': (this.state.scene + 1) % 3});\n\n    }\n    \n    render() {\n        if (this.state.scene == 0) {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <Plot />\n                </div>\n            )          \n        } else if (this.state.scene == 1) {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <Chart />\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <BarChart />\n                </div>\n            )\n        }\n    }\n}\n\nexport default Controller\n","import logo from './logo.svg';\nimport './App.css';\nimport Controller from './components/Controller.js';\nimport * as d3 from \"d3\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Controller />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}