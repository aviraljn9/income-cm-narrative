{"version":3,"sources":["logo.svg","components/Chart.js","components/Plot.js","components/BarChart.js","components/Controller.js","App.js","reportWebVitals.js","index.js"],"names":["Chart","props","svgRef","React","createRef","state","cm_plots","income_plots","setyear","bind","tick","setCurrentYear","handleSelect","addannotation","y_domain","this","country","timerID","datafiltered","filter","x","year","sort","y","parseFloat","datafiltered2","scalex","d3","domain","range","scaley","scaley_2","d","val","html","div","append","attr","style","addpath","addtooltips","call","tickFormat","tickValues","data","translate","graphnum","x1","x2","datay1","parseInt","datay2","length","val1","val2","y1","y2","Math","min","abs","txtbox","xt","yt","percentage_increase","toFixed","txt1","txt2","text","strk","datum","selectAll","enter","i","on","event","transition","duration","pageX","pageY","a","process","incomedata","cm_data","index","year_income","map","cm_country","find","undefined","isNaN","child_mortality","country_index","country_data","push","income","reducer","accumulator","currentValue","sum_cm","reduce","sum_income","updatechart","setInterval","console","log","clearInterval","setState","prevState","prevProps","target","value","all_options","Object","keys","all_countries","concat","for","type","max","step","id","onInput","name","onChange","onClick","resetFunc","sceneno","width","height","ref","Component","Plot","xSeries","ySeries","reduceSumFunc","prev","cur","xBar","yBar","ssXX","pow","ssYY","ssXY","slope","radius","color","leastSquaresCoeff","leastSquares","trendData","x3","y3","BarChart","max_year_reached","txt3","xpoint","ypoint","xarrow","yarrow","num_countries","b","num_countries_per_group","floor","groups","group_index","num_groups","cm_group_averages","curr_group","count_group","sum_cm_group","sum_income_group","cm_avg_this","Array","paddingInner","paddingOuter","cm_avg","bandwidth","income_avg","Controller","setscene","resetscene","scene","prevscene","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.451757ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class Chart extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800,\n            'country': 'average'\n        }\n\n        this.cm_plots = {}\n        this.income_plots = {}\n\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n        this.setCurrentYear =this.setCurrentYear.bind(this);\n        this.handleSelect =this.handleSelect.bind(this);\n        this.addannotation =this.addannotation.bind(this);\n    }    \n\n    updatechart()\n    {\n        let y_domain = 500;\n\n        let radius = 1.5;\n        // if (this.state.year == 2021 && this.timerID === null) {\n        //     y_domain = 150;\n        //     radius = 3;\n        // }\n        if (this.state.country != 'average' && this.timerID === null) {\n            y_domain = 1000;\n        }\n\n\n        var cm_country = this.cm_plots[this.state.country];\n        let datafiltered = cm_country.filter(\n            x => x.year <= this.state.year\n        ).sort((x, y) => parseFloat(x.year) - parseFloat(y.year))\n\n        var income_country = this.income_plots[this.state.country];\n        let datafiltered2 = income_country.filter(\n            x => x.year <= this.state.year\n        ).sort((x, y) => parseFloat(x.year) - parseFloat(y.year))\n\n        const scalex = d3.scaleLinear()\n        .domain([1800,2040])\n        .range([0,700])\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([300,0])\n\n        const scaley_2 = d3.scaleLog()\n        .domain([200,179000])\n        .range([300,0])\n\n        var valueline = d3.line()\n        .x(function(d) { return scalex(d.year); })\n        .y(function(d) { return scaley(d.val); });    \n\n        d3.select('#scatter').html(\"\");\n\n        d3.select('#ttip').html(\"\");\n\n        var div = d3.select('#ttip').append(\"div\")\t\n        .attr(\"class\", \"tooltip\")\t\t\t\t\n        .style(\"opacity\", 0);    \n        \n        this.addpath(datafiltered.filter(x => x.year <= 2021), 'steelblue', scalex, scaley, 'translate(50,50)')\n        this.addpath(datafiltered.filter(x => x.year >= 2021), 'red', scalex, scaley, 'translate(50,50)')\n\n        this.addannotation(datafiltered, scalex, scaley, 'translate(50,50)', 1)\n        this.addtooltips(datafiltered, scalex, scaley, div, 'translate(50,50)')\n\n\n        // g1.append(\"path\")\n        //     .attr(\"class\", \"line\")\n        //     .attr(\"d\", valueline(datafiltered));\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,350)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            .tickFormat(d3.format(\"d\"))\n        )\n\n        this.addpath(datafiltered2.filter(x => x.year <= 2021), 'steelblue', scalex, scaley_2, 'translate(50,450)')\n        this.addpath(datafiltered2.filter(x => x.year >= 2021), 'red', scalex, scaley_2, 'translate(50,450)')\n\n        this.addannotation(datafiltered2, scalex, scaley_2, 'translate(50,450)', 2)\n        this.addtooltips(datafiltered2, scalex, scaley_2, div, 'translate(50,450)')        \n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,450)')\n        .call(\n            d3.axisLeft(scaley_2)\n            .tickValues([300,1000,3000,10000,30000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            .tickFormat(d3.format(\"d\"))\n        )\n        \n    }\n\n    addannotation(data, scalex, scaley, translate, graphnum)\n    {\n        if (this.timerID === null && this.state.year > 1975)\n        {\n            var year1 = 1925;\n            var year2 = 1975;\n            var x1 = scalex(year1);\n            var x2 = scalex(year2);\n            var datay1 = data.filter(x => parseInt(x.year) == year1);\n            var datay2 = data.filter(x => parseInt(x.year) == year2);\n            if (datay1.length == 0 || datay2.length == 0)\n            {\n                return\n            }\n\n            var val1 = parseFloat(datay1[0].val)\n            var val2 = parseFloat(datay2[0].val)\n\n            var y1 = scaley(val1)\n            var y2 = scaley(val2)\n\n            d3.select('#scatter').append('g')\n            .attr('transform',translate)                \n                .append(\"rect\")\n                .attr(\"x\", x1)\n                .attr(\"y\", Math.min(y1, y2))\n                .attr(\"width\", x2 - x1)\n                .attr(\"height\", Math.abs(y2-y1))\n                .attr(\"stroke\", \"black\")\n                .attr(\"fill-opacity\", 0.2)\n                .attr(\"stroke-width\", \"3\")\n                .attr(\"stroke-dasharray\", \"4\")\n\n            var xt = x1\n            var yt = Math.min(y1, y2) - 60;\n\n            var percentage_increase = ((val2 / val1 - 1) * 100).toFixed(2);\n            var txt1 = \"\"\n            var txt2 = \"\"\n            if (graphnum == 1)\n            {\n                percentage_increase = -percentage_increase\n                txt1 = \"decrease\"\n                txt2 = \"child mortality\"\n\n                var txtbox = d3.select('#scatter').append('g')\n                .attr('transform',translate)\n                .append('text')\n                .attr(\"x\", xt)\n                .attr(\"y\", yt)\n                .attr(\"class\", \"text-label\")\n                .text(\"Percentage \" + txt1 + \" in \" )\n    \n                txtbox.append('tspan')\n                .text(txt2 + \" during \")\n                .attr(\"x\", xt)\n                .attr(\"y\", yt + 20)\n                txtbox.append('tspan')\n                .text(\"1925 - 1975: \" + percentage_increase)\n                .attr(\"x\", xt)\n                .attr(\"y\", yt + 40)\n    \n            }\n\n            if (graphnum == 2)\n            {\n                txt1 = \"increase\"\n                txt2 = \"income\"\n\n                var txtbox = d3.select('#scatter').append('g')\n                .attr('transform',translate)\n                .append('text')\n                .attr(\"x\", xt)\n                .attr(\"y\", yt + 20)\n                .attr(\"class\", \"text-label\")\n                .text(\"...while percentage \" + txt1)\n    \n                txtbox.append('tspan')\n                .text(\"in income: \" + percentage_increase)\n                .attr(\"x\", xt)\n                .attr(\"y\", yt + 40)\n    \n            }\n        }\n    }    \n\n    addpath(data, strk, scalex, scaley, translate)\n    {\n        d3.select('#scatter').append('g')\n        .attr('transform', translate)\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', strk)\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", d3.line()\n            .x(function(d) { return scalex(d.year); })\n            .y(function(d) { return scaley(d.val); })\n        )\n    }\n\n    addtooltips(data, scalex, scaley, div, translate)\n    {\n        d3.select('#scatter').append('g')\n        .attr('transform',translate)\n        .selectAll('rect')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('class', 'ttrect')\n        .attr('x',function(d,i) { return scalex(d.year); })\n        .attr('y',function(d,i) { return 0; })\n        .attr('width',function(d,i) { return 1; })\n        .attr('height', function(d,i) { return 300; })\n        .attr('fill', 'black')\n        .attr('opacity', 0)\n        .on(\"mouseover\", function(event, d) {\n            d3.select(this).attr(\"opacity\", 1)\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 1);\t\t\n            div.html(d.year + \"<br/>\" + d.val)\t\n                .style(\"left\", (event.pageX) + \"px\")\t\t\n                .style(\"top\", (event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(event, d) {\t\t\n            d3.select(this).attr(\"opacity\", 0)\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n            });\n    }\n\n    async componentDidMount()\n    {\n        // console.log('chart mounted')\n        this.incomedata = await d3.csv(process.env.PUBLIC_URL + '/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv(process.env.PUBLIC_URL + '/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n\n        this.cm_plots = {}\n        this.cm_plots['average'] = []\n        \n        this.income_plots = {}\n        this.income_plots['average'] = []\n\n        for (let index = 1800; index < 2041; index++) {\n            let year_income = this.incomedata.map(\n                (x) => {                 \n                    let cm_country = this.cm_data.find(y => y.country === x.country);\n                    if (cm_country === undefined) {\n                        return null;\n                    }\n                    if (isNaN(x[index]) || isNaN(cm_country[index]))\n                    {\n                        return null;\n                    }\n                    return {'country': x.country, 'income': x[index], 'child_mortality': cm_country[[index]]} \n                }\n            ).filter(\n                x => {\n                    if (x.child_mortality > 0) return true;\n                    return false;\n                }\n            )\n\n            for (let country_index = 0; country_index < year_income.length; country_index++) {\n                const country_data = year_income[country_index];\n                if (!(country_data.country in this.cm_plots))\n                {\n                    this.cm_plots[country_data.country] = [];\n                    this.income_plots[country_data.country] = [];\n                }\n                this.cm_plots[country_data.country].push({'year': index, 'val': country_data.child_mortality});\n                this.income_plots[country_data.country].push({'year': index, 'val': country_data.income});\n            }\n\n            // console.log(year_income.length)\n            const reducer = (accumulator, currentValue) => accumulator + parseFloat(currentValue);\n            let sum_cm = year_income.map(\n                x => x.child_mortality\n            ).reduce(reducer, 0)\n            // console.log(sum_cm)\n\n            this.cm_plots['average'].push({'year': index, 'val': (sum_cm / year_income.length).toFixed(2)})\n\n            let sum_income = year_income.map(\n                x => x.income\n            ).reduce(reducer, 0)\n            this.income_plots['average'].push({'year': index, 'val': (sum_income / year_income.length).toFixed(2)})\n        }\n        // console.log(this.average_childmortality);\n        // console.log(this.average_income);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n        d3.select('#ttip').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            clearInterval(this.timerID);\n            this.timerID = null;\n            this.setState((prevState, prevProps) => {\n                return {\n                    'country': prevState.country,\n                    'year': 2040\n                };\n            }\n            )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'country': prevState.country,\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState(\n            {\n                'country': this.state.country,\n                'year': event.target.value\n            }\n        );\n\n    }\n\n    setCurrentYear()\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState(\n            {\n                'country': this.state.country,\n                'year': 2040\n            }\n        );\n    }\n\n    handleSelect(event)\n    {\n        this.setState(\n            {\n                'country': event.target.value,\n                'year': this.state.year\n            }\n        );\n    }\n\n    render() {\n        let all_options = Object.keys(this.cm_plots)\n        var all_countries = all_options.filter(x => x != \"average\").sort()\n        all_options = [\"average\"].concat(all_countries)\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                {\n                    this.timerID === null &&\n                    (\n                        <div>\n                            <br></br>\n                            <label> <b>Please select a Country: </b></label>\n                            <select value={this.state.country} onChange={this.handleSelect}>\n                                {\n\n                                    all_options.map(\n                                        (x) => { return (<option value={x}>{x}</option>); }\n                                    )\n                                }\n                            </select>\n                        </div>\n                    )\n                }\n\n                <br></br>\n                <div>\n                    <button onClick = {this.setCurrentYear}>Display complete curve</button>\n                    <button onClick = {() => this.props.resetFunc(this.props.sceneno)}>Restart this scene</button>\n                </div>\n\n                <div id='ttip'></div>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n\n            </div>\n        )\n    }\n}\n\nexport default Chart\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class Plot extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800\n        }\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n        this.setCurrentYear =this.setCurrentYear.bind(this);\n    }    \n\n\tleastSquares(xSeries, ySeries) {\n\t\tvar reduceSumFunc = function(prev, cur) { return prev + cur; };\n            \n\t\tvar xBar = xSeries.reduce(reduceSumFunc) * 1.0 / xSeries.length;\n\t\tvar yBar = ySeries.reduce(reduceSumFunc) * 1.0 / ySeries.length;\n\n\t\tvar ssXX = xSeries.map(function(d) { return Math.pow(d - xBar, 2); })\n\t\t\t.reduce(reduceSumFunc);\n\t\t\n\t\tvar ssYY = ySeries.map(function(d) { return Math.pow(d - yBar, 2); })\n\t\t\t.reduce(reduceSumFunc);\n\t\t\t\n\t\tvar ssXY = xSeries.map(function(d, i) { return (d - xBar) * (ySeries[i] - yBar); })\n\t\t\t.reduce(reduceSumFunc);\n            \n\t\tvar slope = ssXY / ssXX;\n\t\tvar intercept = yBar - (xBar * slope);\n\t\tvar rSquare = Math.pow(ssXY, 2) / (ssXX * ssYY);\n\t\t\n\t\treturn [slope, intercept, rSquare];\n\t}\n\n    updatechart()\n    {\n        const year_income = this.incomedata.map(\n            (x) => {                 \n                let cm_country = this.cm_data.find(y => y.country === x.country);\n                if (cm_country === undefined) {\n                    return null;\n                }\n                if (isNaN(x[this.state.year]) || isNaN(cm_country[this.state.year]))\n                {\n                    return null;\n                }\n                return {'country': x.country, 'income': x[this.state.year], 'child_mortality': cm_country[[this.state.year]]} \n            }\n        ).filter(\n            x => {\n                if (x.child_mortality > 0) return true;\n                return false;\n            }\n        )\n        // console.log(year_income);\n\n        let y_domain = 1000;\n        let radius = 1.5;\n        let color = 'lightblue'\n        if (this.timerID === null) {\n            if (this.state.year == 2021) {\n                y_domain = 150;\n            }\n            radius = 3;\n        }\n\n        if (this.state.year > 2021)\n        {\n            color = 'red'\n        }\n        if (this.state.year == 2021)\n        {\n            color = 'orange'\n        }\n\n        const scalex = d3.scaleLog()\n        .domain([200,179000])\n        .range([0,700])\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([700,0])\n\n        d3.select('#scatter').html(\"\");\n        d3.select('#ttip').html(\"\");\n\n        var div = d3.select('#ttip').append(\"div\")\t\n        .attr(\"class\", \"tooltip\")\t\t\t\t\n        .style(\"opacity\", 0);    \n\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .selectAll('circle')\n        .data(year_income)\n        .enter()\n        .append('circle')\n        .attr('cx',function(d,i) { return scalex(d.income); })\n        .attr('cy',function(d,i) { return scaley(d.child_mortality); })\n        .attr('r',function(d,i) { return radius; })\n        .attr('fill', color)\n        .on(\"mouseover\", function(event, d) {\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 1);\t\t\n            div.html(d.country + \"<br/>\" + d.income + \"<br/>\"  + d.child_mortality)\t\n                .style(\"left\", (event.pageX) + \"px\")\t\t\n                .style(\"top\", (event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n            });\n    \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            .tickValues([300,1000,3000,10000, 30000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n\n        if (this.timerID === null)\n        {\n            var ySeries = year_income.map(x => parseFloat(scaley(x.child_mortality)));\n            var xSeries = year_income.map(x => parseFloat(scalex(x.income)));\n    \n            var leastSquaresCoeff = this.leastSquares(xSeries, ySeries);\n\t\t\n            var x1 = 0;\n            var y1 = leastSquaresCoeff[1];\n            var y2 = 700;\n            var x2 = (y2 - leastSquaresCoeff[1]) / leastSquaresCoeff[0];\n\n            if (x2 > 700)\n            {\n                x2 = 700\n                y2 = leastSquaresCoeff[0] * x2 + leastSquaresCoeff[1]\n            }\n            var trendData = [[x1,y1,x2,y2]];\n            \n            var trendline = d3.select('#scatter').append('g')\n            .attr('transform','translate(50,50)')\n            .selectAll(\".trendline\")\n            .data(trendData);\n                \n            trendline.enter()\n                .append(\"line\")\n                .attr(\"class\", \"trendline\")\n                .attr(\"x1\", function(d) { return d[0]; })\n                .attr(\"y1\", function(d) { return d[1]; })\n                .attr(\"x2\", function(d) { return d[2]; })\n                .attr(\"y2\", function(d) { return d[3]; })\n                .attr(\"stroke\", \"black\")\n                .attr(\"stroke-dasharray\", \"4\")\n                .attr(\"stroke-width\", 1);\n\n            var xt = 500\n            var yt = 300\n\n            var txtbox = d3.select('#scatter').append('g')\n            .attr('transform','translate(50,50)')\n            .append('text')\n            .attr(\"x\", xt)\n            .attr(\"y\", yt)\n            .attr(\"class\", \"text-label\")\n            .text(\"Negative slope of \")\n            // .attr(\"textLength\", 200)\n\n            txtbox.append('tspan')\n            .text(\"trend line indicates \")\n            .attr(\"x\", xt)\n            .attr(\"y\", yt + 20)\n            // .attr(\"textLength\", 200)    \n            txtbox.append('tspan')\n            .text(\"the correlation\")\n            .attr(\"x\", xt)\n            .attr(\"y\", yt + 40)\n            // .attr(\"textLength\", 200)    \n            txtbox.append('tspan')\n            .text(\"between income and\")\n            .attr(\"x\", xt)\n            .attr(\"y\", yt + 60)\n            // .attr(\"textLength\", 200)    \n            txtbox.append('tspan')\n            .text(\"child mortality\")\n            .attr(\"x\", xt)\n            .attr(\"y\", yt + 80)\n            // .attr(\"textLength\", 200)    \n\n            d3.select('#scatter').append('g')\n            .attr('transform','translate(50,50)')\n            .append(\"defs\")\n            .append(\"marker\")\n            .attr('id','arrow')\n            .attr('viewBox',\"0 -5 10 10\")\n            .attr('refX',5)\n            .attr('refY',0)\n            .attr('markerWidth',12)\n            .attr('markerHeight',12)\n            .attr('orient','auto')\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n\n            var x3 = x2 - 100\n            var y3 = leastSquaresCoeff[0] * x3 + leastSquaresCoeff[1]\n\n            d3.select('#scatter').append('g')\n            .attr('transform','translate(50,50)')                \n            .append(\"line\")\n            .attr(\"class\", \"labelline\")\n            .attr(\"x1\", xt + 50)\n            .attr(\"y1\", yt + 90)\n            .attr(\"x2\", function(d) { return x3; })\n            .attr(\"y2\", function(d) { return y3 - 5; })\n            .attr(\"stroke\", \"black\")\n            // .attr(\"stroke-dasharray\", \"4\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"marker-end\", \"url(#arrow)\")\n                                    \n        }\n        \n    }\n\n    async componentDidMount()\n    {\n        // console.log('plot mounted')\n        this.incomedata = await d3.csv(process.env.PUBLIC_URL + '/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv(process.env.PUBLIC_URL + '/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n        d3.select('#ttip').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            clearInterval(this.timerID);\n            this.timerID = null;\n            this.setState((prevState, prevProps) => {\n                return {\n                    'year': 2021\n                };\n            }\n            )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': event.target.value});\n\n    }\n\n    setCurrentYear()\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': 2021});\n\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                <br></br>\n                <div>\n                    <button onClick = {this.setCurrentYear}>Show 2021 data</button>\n                    <button onClick = {() => this.props.resetFunc(this.props.sceneno)}>Restart this scene</button>\n                </div>\n\n                <div id='ttip'></div>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default Plot\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\";\n\nexport class BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'year': 1800\n        }\n        this.setyear =this.setyear.bind(this);\n        this.tick =this.tick.bind(this);\n        this.setCurrentYear =this.setCurrentYear.bind(this);\n        this.addannotation =this.addannotation.bind(this);\n\n        this.max_year_reached = {}\n    }    \n\n    addannotation(x, y, txt1, txt2, txt3, xpoint, ypoint, xarrow, yarrow)\n    {\n        if (this.timerID === null && this.state.year == 2021)\n        {\n            var txtbox = d3.select('#scatter').append('g')\n            .attr('transform','translate(50,50)')\n            .append('text')\n            .attr(\"x\", x)\n            .attr(\"y\", y)\n            .attr(\"class\", \"text-label\")\n            .text(txt1)\n\n            txtbox.append('tspan')\n            .text(txt2)\n            .attr(\"x\", x)\n            .attr(\"y\", y + 20)\n\n            txtbox.append('tspan')\n            .text(txt3)\n            .attr(\"x\", x)\n            .attr(\"y\", y + 40)\n    \n\n            d3.select('#scatter').append('g')\n            .attr('transform','translate(50,50)')\n            .append(\"defs\")\n            .append(\"marker\")\n            .attr('id','arrow')\n            .attr('viewBox',\"0 -5 10 10\")\n            .attr('refX',5)\n            .attr('refY',0)\n            .attr('markerWidth',12)\n            .attr('markerHeight',12)\n            .attr('orient','auto')\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n\n            d3.select('#scatter').append('g')\n            .attr('transform','translate(50,50)')                \n            .append(\"line\")\n            .attr(\"class\", \"labelline\")\n            .attr(\"x1\", xpoint)\n            .attr(\"y1\", ypoint)\n            .attr(\"x2\", xarrow)\n            .attr(\"y2\", yarrow)\n            .attr(\"stroke\", \"black\")\n            // .attr(\"stroke-dasharray\", \"4\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"marker-end\", \"url(#arrow)\")\n        }\n    }    \n\n\n    updatechart()\n    {\n        let y_domain = 500;\n        let radius = 1.5;\n\n        let color = 'lightblue'\n        if (this.state.year > 2021)\n        {\n            color = 'red'\n        }\n        if (this.state.year == 2021)\n        {\n            color = 'orange'\n        }\n\n        if (this.state.year == 2021 && this.timerID === null) {\n            y_domain = 130;\n            radius = 3;\n        }\n\n        const year_income = this.incomedata.map(\n            (x) => {                 \n                let cm_country = this.cm_data.find(y => y.country === x.country);\n                if (cm_country === undefined) {\n                    return null;\n                }\n                if (isNaN(x[this.state.year]) || isNaN(cm_country[this.state.year]))\n                {\n                    return null;\n                }\n                return {'country': x.country, 'income': x[this.state.year], 'child_mortality': cm_country[[this.state.year]]} \n            }\n        ).filter(\n            x => {\n                if (x.child_mortality > 0) return true;\n                return false;\n            }\n        )\n\n        const year_income_sorted = year_income.sort((a, b) => parseFloat(a.income) - parseFloat(b.income))\n        const num_countries = year_income_sorted.length\n        const num_groups = 10\n        const num_countries_per_group = Math.floor(num_countries / num_groups)\n\n        let groups = {}\n        for (let index = 0; index < num_groups; index++) {\n            groups[index] = []            \n        }\n\n        for (let index = 0; index < num_countries; index++) {\n            let group_index = Math.floor(index / num_countries_per_group)\n            group_index = Math.min(group_index, num_groups - 1)\n            groups[group_index].push(year_income[index])            \n        }\n\n        let cm_group_averages = []\n        const reducer = (accumulator, currentValue) => accumulator + parseFloat(currentValue);\n        for (let index = 0; index < num_groups; index++)\n        {\n            let curr_group = groups[index]\n            let count_group = curr_group.length\n            let sum_cm_group = curr_group.map(\n                (x) => x.child_mortality\n            ).reduce(reducer, 0)\n            let sum_income_group = curr_group.map(\n                (x) => x.income\n            ).reduce(reducer, 0)\n            var cm_avg_this = (sum_cm_group / count_group).toFixed(2);\n            cm_group_averages.push({'cm_avg': cm_avg_this, 'income_avg': (sum_income_group / count_group).toFixed(2)})\n\n            if (cm_avg_this < 100)\n            {\n                if (!(index in this.max_year_reached))\n                {\n                    this.max_year_reached[index] = this.state.year;\n                }\n                else \n                {\n                    this.max_year_reached[index] = Math.min(this.max_year_reached[index], this.state.year)\n                }\n            }\n        }\n\n        const scalex = d3.scaleBand()\n        .domain([...Array(num_groups).keys()].map(x=>x+1))\n        .range([0,700])\n        .paddingInner(0.2)\n        .paddingOuter(0.2);\n\n        const scaley = d3.scaleLinear()\n        .domain([0,y_domain])\n        .range([700,0])\n      \n        const scaley_2 = d3.scaleLog()\n        .domain([200,179000])\n        .range([300,0])\n\n        d3.select('#scatter').html(\"\");\n\n        this.addannotation(20, 200, \"Average child mortality of\", \"group 1 countries dropped below 100\", \"for the first time in 2011\", 100, 250, 40, 320)\n\n        this.addannotation(300, 500, \"For group 5, average below 100\", \"was reached in 1982\", \"\", 370, 530, 320, 570)\n\n        this.addannotation(550, 600, \"And for group 10, 1949\", \"\", \"\", 620, 610, 650, 660)\n\n        // this.addannotation(cm_group_averages, scalex, scaley, 1, 20, 200, \"Average child mortality of\", \"group 1 countries dropped below 100\", \"for the first time in 2011\", 0, 0)\n\n        d3.select('#ttip').html(\"\");\n\n        var div = d3.select('#ttip').append(\"div\")\t\n        .attr(\"class\", \"tooltip\")\t\t\t\t\n        .style(\"opacity\", 0);    \n\n\n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .selectAll('rect')\n        .data(cm_group_averages)\n        .enter()\n        .append('rect')\n        .attr('x',function(d,i) { return scalex(i + 1); })\n        .attr('y',function(d,i) { return scaley(d.cm_avg); })\n        .attr('width',function(d,i) { return scalex.bandwidth(); })\n        .attr('height',function(d,i) { return (700 - scaley(d.cm_avg)); })\n        .attr('fill', color)\n        .on(\"mouseover\", function(event, d) {\t\t\n            div.transition()\t\t\n                .duration(200)\t\t\n                .style(\"opacity\", 1);\t\t\n            div.html(\"Average Income: \" + d.income_avg + \"<br/>\" + d.cm_avg)\t\n                .style(\"left\", (event.pageX) + \"px\")\t\t\n                .style(\"top\", (event.pageY - 28) + \"px\");\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\t\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"opacity\", 0);\t\n            });\n\n            \n        d3.select('#scatter').append('g')\n        .attr('transform','translate(50,50)')\n        .call(\n            d3.axisLeft(scaley)\n            // .tickValues([10,100,1000,10000, 100000])\n            .tickFormat(d3.format(\"~s\"))\n        )\n        d3.select('svg').append('g')\n        .attr('transform','translate(50,750)')\n        .call(\n            d3.axisBottom(scalex)\n            // .tickValues([300,1000,3000,10000, 30000, 100000])\n            // .tickFormat(d3.format(\"~s\"))\n        )        \n\n\n    }\n\n    async componentDidMount()\n    {\n        console.log('chart mounted')\n        this.incomedata = await d3.csv(process.env.PUBLIC_URL + '/income_processed.csv');\n        // console.log(this.incomedata);\n        this.cm_data = await d3.csv(process.env.PUBLIC_URL + '/child_mortality_0_5_year_olds_dying_per_1000_born.csv');\n        // console.log(this.cm_data);\n\n        this.updatechart();\n        this.timerID = setInterval(\n            () => this.tick(),\n            25\n        );      \n    }\n\n    componentWillUnmount() {\n        console.log('Unmounting')\n        clearInterval(this.timerID);\n        this.timerID = null;\n        d3.select('#scatter').html(\"\");\n        d3.select('#ttip').html(\"\");\n    }    \n\n    componentDidUpdate()\n    {\n        this.updatechart();\n    }\n\n    tick()\n    {\n        if (this.state.year >= 2040)\n        {\n            console.log(this.max_year_reached)\n            clearInterval(this.timerID);\n            this.timerID = null;\n            this.setState((prevState, prevProps) => {\n                return {\n                    'year': 2021\n                };\n            }\n            )\n            return;\n        }\n        this.setState((prevState, prevProps) => {\n            return {\n                'year': prevState.year + 1\n            };\n        }\n        )\n    }\n\n    setyear(event)\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': event.target.value});\n\n    }\n\n    setCurrentYear()\n    {\n        clearInterval(this.timerID);\n        this.timerID = null;\n        this.setState({'year': 2021});\n\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label for=\"year\">Please select a year: </label>\n                    <input type=\"range\" min={1800} max={2040} step={1} id=\"year\" value={this.state.year} onInput={this.setyear} />\n                    <output name=\"selected_year\" id=\"selected_year\">{this.state.year}</output>\n                </form>\n\n                <br></br>\n                <div>\n                    <button onClick = {this.setCurrentYear}>Show annotated 2021 data</button>\n                    <button onClick = {() => this.props.resetFunc(this.props.sceneno)}>Restart this scene</button>\n                </div>\n\n                <div id='ttip'></div>\n\n                <svg id='scatter' width={800} height={800} ref = {this.svgRef}>\n\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default BarChart\n","import React, { Component } from 'react'\nimport Chart from './Chart.js';\nimport Plot from './Plot.js';\nimport BarChart from './BarChart.js';\n\nexport class Controller extends Component {\n    constructor(props) {\n        super(props);\n        this.svgRef = React.createRef();\n\n        this.state = {\n            'scene': 0,\n            'prevscene': 0\n        }\n        this.setscene = this.setscene.bind(this);\n        this.resetscene = this.resetscene.bind(this);\n    }    \n\n    setscene()\n    {\n        // clearInterval(this.timerID);\n        // this.timerID = null;\n        this.setState({'scene': (this.state.scene + 1) % 3, 'prevscene': (this.state.scene + 1) % 3});\n\n    }\n\n    resetscene(x)\n    {\n        console.log('resetting')\n        console.log(x);\n        this.setState({'scene': -1, 'prevscene': x});\n    }\n\n    componentDidUpdate()\n    {\n        if (this.state.scene == -1)\n        {\n            this.setState({'scene': this.state.prevscene, 'prevscene': this.state.prevscene});\n        }\n    }\n    \n    render() {\n        if (this.state.scene == 0) {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <Plot resetFunc = {this.resetscene} sceneno = {this.state.scene} />\n                </div>\n            )          \n        } else if (this.state.scene == 1) {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <Chart resetFunc = {this.resetscene} sceneno = {this.state.scene} />\n                </div>\n            )\n        }\n        else if (this.state.scene == 2) {\n            return (\n                <div>\n                    <button onClick={this.setscene}>Change</button>\n                    <BarChart resetFunc = {this.resetscene} sceneno = {this.state.scene} />\n                </div>\n            )\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nexport default Controller\n","import logo from './logo.svg';\nimport './App.css';\nimport Controller from './components/Controller.js';\nimport * as d3 from \"d3\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Controller />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}